{
	"compilerOptions": {
		"target": "es2017",
		"lib": ["ESNext"],
		"incremental": true /* Enable incremental compilation */,
		"module": "commonjs" /* Specify what module code is generated. */,
		"rootDir": "./" /* Specify the root folder within your source files. */,
		"moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
		"paths": {} /* Specify a set of entries that re-map imports to additional lookup locations. */,
		"resolveJsonModule": true /* Enable importing .json files */,
		"allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,
		"checkJs": true /* Enable error reporting in type-checked JavaScript files. */,
		"maxNodeModuleJsDepth": 1 /* Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`. */,
		// "noEmit": true,                                   /* Disable emitting files from a compilation. */
		"importsNotUsedAsValues": "remove" /* Specify emit/checking behavior for imports that are only used for types */,
		"isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
		"strict": true /* Enable all strict type-checking options. */,
		"strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
		"strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
		"useUnknownInCatchVariables": true /* Type catch clause variables as 'unknown' instead of 'any'. */,
		"alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
		"noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
		"noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
		"noUncheckedIndexedAccess": true /* Include 'undefined' in index signature results */,
		"skipDefaultLibCheck": true /* Skip type checking .d.ts files that are included with TypeScript. */,
		"typeRoots": ["src/@types", "node_modules/@types"]
	},
	"exclude": ["node_modules"]
}
